{
  // Schema reference for Azure EPAC-compatible policy definitions
  "$schema": "https://raw.githubusercontent.com/Azure/enterprise-azure-policy-as-code/main/Schemas/policy-definition-schema.json",

  // Unique internal name for the policy
  "name": "block-dns-private-resolver-creation",

  "properties": {
    "displayName": "Restrict DNS Private Resolver Creation",
    // Business-driven description highlighting compliance linkage
    "description": "Ensures compliance by preventing unauthorized creation of Microsoft.Network/dnsResolvers resources. Aligns with NIST AC-3 (Access Enforcement) and reduces attack surface exposure in Azure networking.",

    "mode": "All",

    "metadata": {
      "category": "Networking",
      "version": "1.1.0",
      "severity": "High",
      "source": "Frances Saunders Portfolio", // Marks this as part of your portfolio
      "compliance": {
        // Explicit mapping to frameworks shows audit awareness
        "frameworks": [
          "NIST SP 800-53",
          "ISO 27001",
          "FedRAMP Moderate"
        ]
      }
    },

    "parameters": {
      // Parameterized effect lets teams choose between Audit, Deny, or Disabled
      "effect": {
        "type": "String",
        "allowedValues": [ "Audit", "Deny", "Disabled" ],
        "defaultValue": "Deny",
        "metadata": {
          "description": "Select the effect to enforce for DNS Private Resolver creation attempts.",
          "displayName": "Effect"
        }
      },

      // Optional exclusions improve flexibility in enterprise environments
      "excludedResourceGroups": {
        "type": "Array",
        "metadata": {
          "description": "Optional: Resource groups exempted from this policy.",
          "displayName": "Excluded Resource Groups"
        },
        "defaultValue": []
      }
    },

    "policyRule": {
      "if": {
        "allOf": [
          {
            // Match resource type
            "field": "type",
            "equals": "Microsoft.Network/dnsResolvers"
          },
          {
            // Exclude resources in whitelisted RGs
            "not": {
              "field": "resourceGroup",
              "in": "[parameters('excludedResourceGroups')]"
            }
          }
        ]
      },
      // Apply effect as defined by parameter
      "then": {
        "effect": "[parameters('effect')]"
      }
    }
  }
}
