{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Anomaly Results Visualization\n",
    "This notebook reads `anomaly_results.csv` generated by the detector and highlights flagged lines.\n",
    "No secrets are embedded; configuration is read from environment variables or a vault at runtime in other scripts."
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "outputs": [],
   "execution_count": null,
   "source": [
    "import csv, statistics\n",
    "import matplotlib.pyplot as plt\n",
    "rows = []\n",
    "with open('anomaly_results.csv', newline='', encoding='utf-8') as f:\n",
    "    r = csv.DictReader(f)\n",
    "    for row in r:\n",
    "        row['anomaly_score'] = float(row['anomaly_score'])\n",
    "        row['zscore'] = float(row['zscore'])\n",
    "        row['flag'] = int(row['flag'])\n",
    "        rows.append(row)\n",
    "print(f\"Loaded {len(rows)} rows\")\n",
    "zs = [row['zscore'] for row in rows]\n",
    "flags = [row['flag'] for row in rows]\n",
    "x = list(range(len(rows)))\n",
    "plt.figure(figsize=(10,5))\n",
    "plt.scatter(x, zs, label='z-score')\n",
    "xf = [i for i,v in enumerate(flags) if v==1]\n",
    "zf = [zs[i] for i in xf]\n",
    "if xf:\n",
    "    plt.scatter(xf, zf, marker='x', s=80, label='flagged')\n",
    "plt.axhline(1.5, linestyle='--', label='threshold=1.5')\n",
    "plt.xlabel('line index'); plt.ylabel('z-score'); plt.title('Anomaly z-scores'); plt.legend(); plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Top 10 anomalies by z-score"
   ]
  },
  {
   "cell_type": "code",
   "metadata": {},
   "outputs": [],
   "execution_count": null,
   "source": [
    "pairs = sorted([(row['zscore'], i, row['line']) for i,row in enumerate(rows)], reverse=True)[:10]\n",
    "for rank,(z,i,ln) in enumerate(pairs, start=1):\n",
    "    print(f\"{rank:02d}  z={z:.3f}  line#{i}: {ln[:160]}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": { "display_name": "Python 3", "language": "python", "name": "python3" },
  "language_info": { "name": "python", "version": "3.10" }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
